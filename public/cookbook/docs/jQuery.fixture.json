C({"name": "jQuery.fixture", "type": "class", "parent": "../jquery/dom/fixture/fixture.js", "comment": "<p>Fixtures simulate AJAX responses.  Instead of making \na request to a server, fixtures simulate \nthe response with a file or function. They are a great technique when you want to develop JavaScript \nindependently of the backend. </p>\n\n<h3>Two Quick Examples</h3>\n\n<p>There are two common ways of using fixtures.  The first is to \nmap Ajax requests to another file or function.  The following \nintercepts requests to <code>/tasks.json</code> and directs them \nto <code>fixtures/tasks.json</code>:</p>\n\n<pre><code>$.fixture(\"/tasks.json\",\"fixtures/tasks.json\");\n</code></pre>\n\n<p>You can also add a fixture option directly to $.ajax like:</p>\n\n<pre><code>$.ajax({url: \"/tasks.json\",\n  dataType: \"json\",\n  type: \"get\",\n  fixture: \"fixtures/tasks.json\",\n  success: myCallback\n});\n</code></pre>\n\n<p>The first technique keeps fixture logic out of your Ajax \nrequests.  However, if your service urls are changing <strong>a lot</strong> \nthe second technique means you only have to change the service\nurl in one spot.</p>\n\n<h2>Types of Fixtures</h2>\n\n<p>There are 2 types of fixtures:\n  - <strong>Static</strong> - the response is in a file.\n  - <strong>Dynamic</strong> - the response is generated by a function.</p>\n\n<p>There are different ways to lookup static and dynamic fixtures.</p>\n\n<h3>Static Fixtures</h3>\n\n<p>Static fixtures use an alternate url as the response of the Ajax request.</p>\n\n<pre><code>// looks in fixtures/tasks1.json relative to page\n$.fixture(\"tasks/1\", \"fixtures/task1.json\");\n\n$.ajax({type:\"get\", \n       url: \"tasks/1\", \n       fixture: \"fixtures/task1.json\"})\n\n// looks in fixtures/tasks1.json relative to jmvc root\n// this assumes you are using steal\n$.fixture(\"tasks/1\", \"//fixtures/task1.json\");\n\n$.ajax({type:\"get\", \n       url: \"tasks/1\", \n       fixture: \"//fixtures/task1.json\"})` \n</code></pre>\n\n<h3>Dynamic Fixtures</h3>\n\n<p>Dynamic Fixtures are functions that return the arguments the $.ajax callbacks \n(<code>beforeSend</code>, <code>success</code>, <code>complete</code>, \n<code>error</code>) expect. </p>\n\n<p>For example, the \"<code>success</code>\" of a json request is called with \n<code>[data, textStatus, XMLHttpRequest].</p>\n\n<p>There are 2 ways to lookup dynamic fixtures. They can provided:</p>\n\n<pre><code>//just use a function as the fixture property\n$.ajax({\n  type:     \"get\", \n  url:      \"tasks\",\n  data:     {id: 5},\n  dataType: \"json\",\n  fixture: function( settings, callbackType ) {\n    var xhr = {responseText: \"{id:\"+settings.data.id+\"}\"}\n    switch(callbackType){\n      case \"success\": \n        return [{id: settings.data.id},\"success\",xhr]\n      case \"complete\":\n        return [xhr,\"success\"]\n    }\n  }\n})\n</code></pre>\n\n<p>Or found by name on $.fixture:</p>\n\n<pre><code>// add your function on $.fixture\n// We use -FUNC by convention\n$.fixture[\"-myGet\"] = function(settings, cbType){...}\n\n// reference it\n$.ajax({\n  type:\"get\", \n  url: \"tasks/1\", \n  dataType: \"json\", \n  fixture: \"-myGet\"})\n</code></pre>\n\n<p>Dynamic fixture functions are called with:</p>\n\n<ul>\n<li> settings - the settings data passed to <code>$.ajax()</code>\n<li> calbackType - the type of callback about to be called: \n <code>\"beforeSend\"</code>, <code>\"success\"</code>, <code>\"complete\"</code>, \n   <code>\"error\"</code></li>\n</ul>\n\n<p>and should return an array of arguments for the callback.<br/><br/></p>\n\n<div class='whisper'>PRO TIP: \nDynamic fixtures are awesome for performance testing.  Want to see what \n10000 files does to your app's performance?  Make a fixture that returns 10000 items.\n\nWhat to see what the app feels like when a request takes 5 seconds to return?  Set\n[jQuery.fixture.delay] to 5000.\n</div>\n\n<h2>Helpers</h2>\n\n<p>The fixture plugin comes with a few ready-made dynamic fixtures and \nfixture helpers:</p></p>\n\n<ul>\n<li>[jQuery.fixture.make] - creates fixtures for findAll, findOne.</li>\n<li>[jQuery.fixture.-restCreate] - a fixture for restful creates.</li>\n<li>[jQuery.fixture.-restDestroy] - a fixture for restful updates.</li>\n<li>[jQuery.fixture.-restUpdate] - a fixture for restful destroys.</li>\n</ul>\n\n<div class='demo_wrapper' data-demo-src='jquery/dom/fixture/fixture.html'></div>", "plugin": "jquery/dom/fixture", "download": "http://jmvcsite.heroku.com/pluginify?plugins[]=jquery/dom/fixture/fixture.js", "test": "jquery/dom/fixture/qunit.html", "parents": ["dom"], "construct": "Takes an ajax settings and returns a url to look for a fixture.  Overwrite this if you want a custom lookup method.\n", "ret": {"description": "<p>the url that will be used for the fixture</p>", "type": "String"}, "params": {"settings": {"order": 0, "description": "", "name": "settings", "type": "Object", "optional": false}}, "children": ["jQuery.fixture.-restUpdate", "jQuery.fixture.-restDestroy", "jQuery.fixture.-restCreate", "jQuery.fixture.make", "jQuery.fixture.xhr", "jQuery.fixture.on", "jQuery.fixture.delay", "jquery.fixture.0organizing", "jquery.fixture.1errors"]})